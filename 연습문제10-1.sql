--[연습문제 10-1]
-- ※ XEPDB1 계정으로 실습진행, 기존 테이블등은 모두 삭제 하세요~
-- 다음의 테이블을 생성하시오 (1~3)


--1. 테이블명 : STAR_WARS
--   컬럼    : EPISODE_ID, EPISODE_NAME, OPEN_YEAR
--   타입    : 숫자타입(5), 가변문자타입(50), 숫자타입(4)
--   기본키  : EPISODE_ID
CREATE TABLE STAR_WARS (
    EPISODE_ID NUMBER(5), -- 컬럼 레벨에서 PK 정의 하거나
    EPISODE_NAME VARCHAR2(50), 
    OPEN_YEAR NUMBER(4)
    --테이블 레벨에서 PK를 정의
);

-- 또는 테이블 생성 후 PK 제약조건 지정
ALTER TABLE STAR_WARS
ADD CONSTRAINT STAR_WARS_ID_PK PRIMARY KEY (EPISODE_ID);
   
 
--2. 테이블명 : CHARACTERS
--   컬럼    : CHARACTER_ID, CHARACTER_NAME, MASTER_ID, ROLE_ID, EMAIL
--   타입    :  숫자타입(5)  , 가변문자타입(30), 숫자타입(5), 숫자타입(4), 가변문자타입(40)
--   기본키  : CHARACTER_ID   
CREATE TABLE CHARACTERS (
    CHARACTER_ID NUMBER(5) PRIMARY KEY, --컬럼 레벨, 
    CHARACTER_NAME VARCHAR2(30), 
    MASTER_ID NUMBER(5), 
    ROLE_ID NUMBER(4), 
    EMAIL VARCHAR2(40)
    -- CONSTRAINT CHARACTERS_ID_PK PRIMARY KEY (CHARACTER_ID) -- 테이블 레벨
);
   
   
--3. 테이블명 : CASTING
--   컬럼    : EPISODE_ID, CHARACTER_ID, REAL_NAME
--   타입    : 숫자타입(5), 숫자타입(5), 가변문자타입(30)
--   기본키  : EPISODE_ID, CHARACTER_ID
-- 10번 문항의 참조키 생성(STAR_WARS 테이블의 EPSIDE_ID, CHARACTERS 테이블의 CHARACTER_ID)
CREATE TABLE CASTING (
    EPISODE_ID NUMBER(5), 
    CHARACTER_ID NUMBER(5), 
    REAL_NAME VARCHAR2(30)
);
   
--4. STAR_WARS 테이블에 다음과 같이 저장한다 (교재 88p. 표 참고)
INSERT INTO STAR_WARS
VALUES (4, '새로운 희망(A New Hope)', 1977);
INSERT INTO STAR_WARS
VALUES (5, '제국의 역습(The Empire Strikes Back)', 1980);
INSERT INTO STAR_WARS
VALUES (6, '제다이 귀환(Return of the Jedi)', 1983);
INSERT INTO STAR_WARS
VALUES (1, '보이지 않는 위험(The Phantom Menace)', 1999);
INSERT INTO STAR_WARS
VALUES (2, '클론의 습격(Attack of the Clones)', 2002);
INSERT INTO STAR_WARS
VALUES (3, '시스의 복수(Revenge of the Sith', 2005);

SELECT *
FROM STAR_WARS;


--5. CHARACTERS 테이블에 다음과 같이 저장한다 (교재 89p. 표 참고)
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (1, '루크 스카이워커', 'luke@jedai.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (2, '한 솔로', 'solo@alliance.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (3, '레이아 공주', 'leia@alliance.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (4, '오비완 케노비', 'Obi-Wan@jedai.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (5, '다쓰 베이더', 'vader@sith.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (6, '다쓰 베이더(목소리)', 'vader_voice@sith.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (7, 'C-3PO', 'c3po@alliance.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (8, 'R2-D2', 'r2d2@alliance.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (9, '츄바카', 'Chewbacca@alliance.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (10, '랜도 칼리시안', NULL);
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (11, '요다', 'yoda@jedai.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (12, '다쓰 시디어스', 'sidious@sith.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (13, '아나킨 스카이워커', 'Anakin@jedai.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (14, '콰이곤 진', NULL);
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (15, '아미달라 여왕', NULL);
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (16, '아나킨 어머니', NULL);
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (17, '자자빙크스(목소리)', NULL);
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (18, '다쓰 몰', 'maul@sith.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (19, '장고 펫', NULL);
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (20, '마스터 윈두', 'windu@jedai.com');
INSERT INTO CHARACTERS (CHARACTER_ID, CHARACTER_NAME, EMAIL)
VALUES (21, '두쿠 백작', 'dooku@jedai.com');

SELECT *
FROM CHARACTERS;

--6. ROLES 테이블을 생성하여 다음과 같이 저장한다 (교재 89p. 표 참고)
-- ROLE_ID를 PK로 지정하라는 말은 없지만, 7번에서 FK로 사용하려면, ROLE_ID를 PK로 제약조건을 걸어야 가능

CREATE TABLE ROLES (
    ROLE_ID NUMBER(4),
    ROLE_NAME VARCHAR2(20)
);

INSERT INTO ROLES
VALUES (1001, '제다이');
INSERT INTO ROLES
VALUES (1002, '시스');
INSERT INTO ROLES
VALUES (1003, '반란군');

SELECT *
FROM ROLES;

--ORA-02270: 이 열목록에 대해 일치하는 고유 또는 기본 키가 없습니다.
--02270. 00000 -  "no matching unique or primary key for this column-list"
ALTER TABLE ROLES
ADD CONSTRAINT ROLE_ID_PK PRIMARY KEY (ROLE_ID);


--7. CHARACTERS 테이블의 ROLE_ID 컬럼의 데이터가 ROLES 테이블의 ROLE_ID 컬럼의 데이터를
--참조하도록 CHARACTERS 테이블에 참조키를 생성한다.
ALTER TABLE CHARACTERS
ADD CONSTRAINT ROLE_ID_ROLES_FK FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ROLE_ID);


8. 참조키를 생성했으면, CHARACTERS 테이블의 ROLE_ID 값을 변경한다.
단, 이메일이 sith 이면 시스족인 1002, alliance면 반란군이 1003에 해당한다.
그리고 제다이 기사는 루크스카이워커, 오비완 케노비, 요다, 아나킨 스카이워커, 과이곤 진,
마스터 윈두, 두쿠 백작으로 1001에 해당한다.
/*
SELECT *
FROM CHARACTERS; -- MASTER_ID, ROLE_ID가 NULL
*/
UPDATE CHARACTERS
SET ROLE_ID = 1001
WHERE   EMAIL LIKE '%jedai%';

UPDATE CHARACTERS
SET ROLE_ID = 1002
WHERE   EMAIL LIKE '%sith%';

UPDATE CHARACTERS
SET ROLE_ID = 1003
WHERE   EMAIL LIKE '%alliance%'; -- 반란군 O, 연합군 x

SELECT *
FROM CHARACTERS;

COMMIT;

9. CHARACTERS 테이블의 MASTER_ID 컬럼은 EMPLOYEES 테이블의 MANAGER_ID와 같은 역할을 한다.
다음의 인물을 보고 그 마스터의 CHARACTER_ID 값으 찾아 MASTER_ID 컬럼을 변경한다.
(교재 p.90 표 참고)

/* SELF JOIN 문제 : 이미 MASTER_ID가 있어서 거꾸로 마스터의 정보를 조회하는~ 형태로 진행!
EMPLOYEE_ID     FIRST_NAME    MANAGER_ID 
-----------------------------------------
100             Steven          NULL
101             Neeana          100
*/
ROLLBACK;

SELECT *
FROM CHARACTERS;

-- 서브쿼리 문제
UPDATE CHARACTERS
SET MASTER_ID = ( SELECT CHARACTER_ID
                  FROM CHARACTERS
                  WHERE CHARACTER_NAME='오비완 케노비' )
WHERE CHARACTER_NAME IN ('아나킨 스카이워커', '루크 스카이워커');

UPDATE CHARACTERS
SET MASTER_ID = ( SELECT CHARACTER_ID
                  FROM CHARACTERS
                  WHERE CHARACTER_NAME='요다' )
WHERE CHARACTER_NAME IN ('마스터 윈두', '두쿠 백작');

UPDATE CHARACTERS
SET MASTER_ID = ( SELECT CHARACTER_ID
                  FROM CHARACTERS
                  WHERE CHARACTER_NAME='다쓰 시디어스' )
WHERE CHARACTER_NAME IN ('다쓰 베이더', '다쓰 몰');

UPDATE CHARACTERS
SET MASTER_ID = ( SELECT CHARACTER_ID
                  FROM CHARACTERS
                  WHERE CHARACTER_NAME='콰이곤 진' )
WHERE CHARACTER_NAME = '오비완 케노비';

UPDATE CHARACTERS
SET MASTER_ID = ( SELECT CHARACTER_ID
                  FROM CHARACTERS
                  WHERE CHARACTER_NAME='두쿠 백작' )
WHERE CHARACTER_NAME = '콰이곤 진';

SELECT *
FROM CHARACTERS
WHERE MASTER_ID IS NOT NULL;

COMMIT;

10. CASTING 테이블의 기본키는 EPISODE_ID와 CHARACTER_ID 이다. 두 컬럼은 각각 STAR_WARS와
CHARACTERS 테이블의 기본키를 참조하고 있다.
CASTING 테이블에 각각 이 두 테이블의 컬럼을 참조하도록 참조키를 생성한다.

-- 현재 제약조건을 확인! [없으니 ~ 추가하라는 문제]
--SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE
--FROM USER_CONSTRAINTS
--WHERE TABLE_NAME='CASTING';

ALTER TABLE CASTING
ADD CONSTRAINT EPISODE_ID_STAR_WARS_FK FOREIGN KEY (EPISODE_ID) REFERENCES STAR_WARS (EPISODE_ID);

ALTER TABLE CASTING
ADD CONSTRAINT CHARACTER_ID_CHARACTERS_FK FOREIGN KEY (CHARACTER_ID) REFERENCES CHARACTERS (CHARACTER_ID);

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME='CASTING';


-- CASTING 테이블에 입력할 데이터를 준비! ==> 연습문제 10-2 진행가능 3~5번..
SELECT *
FROM CHARACTERS;

SELECT *
FROM CASTING;

DESC CASTING;
-- 공유 폴더 엑셀파일 참고, 데이터 삽입~
INSERT INTO CASTING 
VALUES (4,	1,	'마크해밀');
INSERT INTO CASTING 
VALUES (3,	2,	'해리슨 포드');
INSERT INTO CASTING 
VALUES (2,	3,	'캐리 피셔');
INSERT INTO CASTING 
VALUES (1,	4,	'이완 맥그리거');
INSERT INTO CASTING 
VALUES (5,	5,	'헤이든 크리스텐슨');
INSERT INTO CASTING 
VALUES (6,	6,	'제임스 얼 존스');
INSERT INTO CASTING 
VALUES (3,	7,	'앤서니 대니얼스');
INSERT INTO CASTING 
VALUES (4,	8,	'케니 베이커');
INSERT INTO CASTING 
VALUES (2,	9,	'피터 메이휴');
INSERT INTO CASTING 
VALUES (6,	10,	'빌리 디 윌리엄스');
INSERT INTO CASTING 
VALUES (1,	11,	'프랭크 오즈');
INSERT INTO CASTING 
VALUES (3,	12,	'이완 맥더미드');
INSERT INTO CASTING 
VALUES (2,	13,	'잭 애프론');
INSERT INTO CASTING 
VALUES (6,	14,	'리암 니슨');
INSERT INTO CASTING 
VALUES (4,	15,	'나탈리 포트만');
INSERT INTO CASTING 
VALUES (4,	16,	'페르닐라 아우구스트');
INSERT INTO CASTING 
VALUES (5,	17,	'아메드 베스트');
INSERT INTO CASTING 
VALUES (2,	18,	'레이 파크');
INSERT INTO CASTING 
VALUES (2,	19,	'테무에라 모리슨');
INSERT INTO CASTING 
VALUES (3,	20,	'새뮤얼 L. 잭슨');
INSERT INTO CASTING 
VALUES (4,	21,	'크리스토퍼 리');

COMMIT;

----------------------------
SELECT *
FROM CHARACTERS;
